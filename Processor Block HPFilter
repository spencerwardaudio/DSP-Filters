    void ACEqualizer::process(float* inAudio,
                          int channelNumber,
                          float* outAudio,
                          int inNumSamplestoRender)
{
    
    float v1 = theFilters[channelNumber].v1;
    float v2 = theFilters[channelNumber].v2;
    
    auto Ts = (float)(1.0 / 44100.0);
    auto  w0 = (float)(2.0 * double_Pi * 200.0);
    
    auto a0 = Ts * w0 + 2.0f;
    
    auto b0 = (Ts * w0) / a0;
    
    auto b1 = (Ts * w0) / a0;
    
    auto b2 = 0.0f;

    auto a1 = (Ts * w0 - 2.0f) / a0;
    auto a2 = 0.0f;
    
    for(int i = 0; i < inNumSamplestoRender; i++)
    {
        auto input = inAudio[i];

        auto output = b0 * input + v1;
        v1 = b1 * input + v2 - a1 * output;
        v2 = b2 * input - a2 * output;
        
        outAudio[i] = output;

    }
    
    theFilters[channelNumber].v1 = v1;
    theFilters[channelNumber].v2 = v2;
    
}
